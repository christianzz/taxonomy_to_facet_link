<?php

/**
 * @file
 * taxonomy to apachesolr link module file.
 * Defines a formatter to change the render of a taxonomy link to point to
 * a Solr Search.
 */

/**
 * Implements hook_field_formatter_info().
 */
function taxonomy_to_facet_link_field_formatter_info() {
  return array(
    'taxonomy_to_facet_link' => array(
      'label' => t('Facet Link'),
      'field types' => array('taxonomy_term_reference'),
      'settings' => array(
        'facetapi_searcher' => 'facetapi_searcher',
        'search_path' => 'search',
        'link_only' => FALSE,
        'target' => '_self',
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function taxonomy_to_facet_link_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  switch ($display['type']) {
    case 'taxonomy_to_facet_link':
      foreach ($items as $delta => $item) {
        $term = taxonomy_term_load($item['tid']);
        $name = $term->name;

        // Add multilingual support if needed.
        if (module_exists('i18n_taxonomy') && function_exists('i18n_taxonomy_term_name')) {
          $name = i18n_taxonomy_term_name($term, $entity->language);
        }
        if (isset($display['settings']['link_only']) && $display['settings']['link_only']) {
          $element[$delta] = array(
            '#type' => 'item',
            '#markup' => '/' . _taxonomy_to_facet_link_create_solr_search_url($term->name, $term->tid, $field['field_name'], $display['settings']['search_path'], $display['settings']['facetapi_searcher']),
          );
        }
        else {
          $element[$delta] = array(
            '#type' => 'link',
            '#title' => $name,
            '#href' => _taxonomy_to_facet_link_create_solr_search_url($term->name, $term->tid, $field['field_name'], $display['settings']['search_path'], $display['settings']['facetapi_searcher']),
            '#attributes' => array(
              'target' => $display['settings']['target'],
            ),
          );
        }
      }
      break;
  }
  return $element;
}

/**
 * Implements hook_menu().
 */
function taxonomy_to_facet_link_menu() {

  $menu_items = array();

  $menu_items['admin/config/search/taxonomy-to-facet-link'] = array(
    'title' => 'Taxonomy to facet link administration',
    'description' => 'Configure Taxonomy to facet link',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('taxonomy_to_facet_link_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'admin.page.inc',
  );

  return $menu_items;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function taxonomy_to_facet_link_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $searchers = facetapi_get_searcher_info();
  $active_searchers = array();
  foreach ($searchers as $searcher => $info) {
    $active_searchers[$searcher] = $info['label'];
  }
  $element['facetapi_searcher'] = array(
    '#type' => 'select',
    '#title' => t('Searcher'),
    '#description' => t('Select the searcher you will be using to link to.'),
    '#options' => $active_searchers,
    "#default_value" => $settings['facetapi_searcher'],
  );
  $element['search_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Search path'),
    '#description' => t('Url to your search path without trailing slash. Example: http://mysite.com/solr or /search. <br/> You can edit the suggested default value at !link', array('!link' => l(t('Module administration'), 'admin/config/search/taxonomy-to-facet-link'))),
    '#default_value' => $settings['search_path'],
    '#required' => TRUE,
  );
  $element['link_only'] = array(
    '#type' => 'checkbox',
    '#title' => t('Link Only'),
    '#description' => t('Povide a link without the term.'),
    '#default_value' => $settings['link_only'],
    '#required' => FALSE,
  );
  $element['target'] = array(
    '#type' => 'select',
    '#title' => "Link target",
    "#description" => t('Select the target of the taxonomy link'),
    '#options' => _taxonomy_to_facet_link_a_target_options(),
    "#default_value" => $settings['target'],
  );

  return $element;
}

/**
 * Validates a search_path url.
 */
function _taxonomy_to_facet_link_validate_search_path($element, &$form_state) {

  $search_path = $element['search_path']['#value'];

  if ((valid_url($search_path, FALSE) || valid_url($search_path, TRUE)) == FALSE) {
    form_error($element, t("Invalid url provided"));
  }
  if (substr($search_path, -1) == '/') {
    form_error($element, t('No trailing slashes "/" please'));
  }
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function taxonomy_to_facet_link_field_formatter_settings_summary($field, $instance, $view_mode) {

  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary_vars = array(
    '@search_path' => $settings['search_path'],
    '@searcher' => $settings['facetapi_searcher'],
    '@link_only' => $settings['link_only'],
    '@target' => $settings['target'],
  );

  $summary = t('Path: @search_path Target: @target Searcher: @searcher, Link Only: @link_only', $summary_vars);
  return $summary;

  // Generate an example url by fetching a term from the vocabulary of this
  // field if available.
  if (isset($field['settings']['allowed_values'][0]['vocabulary']) && $vocabulary = taxonomy_vocabulary_machine_name_load($field['settings']['allowed_values'][0]['vocabulary'])) {
    $terms = taxonomy_term_load_multiple(array(), array('vid' => $vocabulary->vid));
    if (current($terms)) {
      $term = current($terms);
      $generated_example_url = _taxonomy_to_facet_link_create_solr_search_url(
        $term->name,
        $term->tid,
        $field['field_name'],
        $settings['search_path'],
        $settings['facetapi_searcher']
      );
      $summary .= "<br/>Example url: <a href=\"{$generated_example_url}\">Example</a>";
    }
  }

  return $summary;
}

/**
 * Returns a solrsearch filter query link for a taxonomy term.
 */
function _taxonomy_to_facet_link_create_solr_search_url($term_name, $tid, $field_name, $search_path, $searcher) {
  if ($searcher == 'facetapi_searcher') {
    $link = 'taxonomy/term/' . $tid;
  }
  else {
    $adapter = facetapi_adapter_load($searcher);
    $facet = facetapi_facet_load($field_name, $searcher);
    // If a facet is not correctly returned return the term link.
    if (is_array($facet)) {
      $href = $adapter->getFacetPath($facet, array($tid), 0);
      $link = $search_path . substr($href, strlen($_GET['q']));
    }
    else {
      $link = 'taxonomy/term/' . $tid;
    }
  }
  drupal_alter('apachesolr_taxonomy_link', $link, $context = array(
    'term' => $term_name, 'field_name' => $field_name, 'search_path' => $search_path, 'searcher' => $searcher));
  return $link;
}

/**
 * Returns array of a html element target options.
 */
function _taxonomy_to_facet_link_a_target_options() {
  return array(
    '_self' => t('_self - In the Same frame as it was clicked'),
    '_blank' => t('_blank - In a new window or tab'),
    '_parent' => t('_parent - In the parent frame'),
    '_top' => t('_top - The full body of the window'),
  );
}

/**
 * Gets the default search path value.
 */
function _taxonomy_to_facet_link_get_settings_default_path_value() {
  global $base_url;
  return variable_get('taxonomy_to_facet_link_default_path', $base_url . '/' . 'search');
}
